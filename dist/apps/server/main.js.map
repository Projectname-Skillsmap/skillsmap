{"version":3,"file":"main.js","mappings":"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","sources":["webpack://skillsmap/./apps/server/src/assets/app.module.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/nodes.module.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/nodes.resolver.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/nodes.service.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/types/index.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/types/node.ts","webpack://skillsmap/./apps/server/src/assets/graph/nodes/types/nodes.input.ts","webpack://skillsmap/./apps/server/src/assets/neo4j/neo4j.module.ts","webpack://skillsmap/./apps/server/src/assets/neo4j/neo4j.service.ts","webpack://skillsmap/./apps/server/src/assets/query/query.module.ts","webpack://skillsmap/./apps/server/src/assets/query/query.service.ts","webpack://skillsmap/external commonjs \"@nestjs/apollo\"","webpack://skillsmap/external commonjs \"@nestjs/common\"","webpack://skillsmap/external commonjs \"@nestjs/config\"","webpack://skillsmap/external commonjs \"@nestjs/core\"","webpack://skillsmap/external commonjs \"@nestjs/graphql\"","webpack://skillsmap/external commonjs \"apollo-server-core\"","webpack://skillsmap/external commonjs \"cypher-query-builder\"","webpack://skillsmap/external commonjs \"tslib\"","webpack://skillsmap/external node-commonjs \"path\"","webpack://skillsmap/webpack/bootstrap","webpack://skillsmap/./apps/server/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\r\nimport { ConfigModule } from '@nestjs/config';\r\nimport { Neo4jModule } from './neo4j/neo4j.module';\r\nimport { GraphQLModule } from '@nestjs/graphql';\r\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\r\nimport { join } from 'path';\r\nimport { Neo4j } from './neo4j/neo4j.service';\r\nimport { ApolloServerPluginLandingPageLocalDefault } from 'apollo-server-core';\r\nimport { QueryModule } from './query/query.module';\r\nimport { NodesModule } from './graph/nodes/nodes.module';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n    }),\r\n    Neo4jModule.forRoot(),\r\n    GraphQLModule.forRoot<ApolloDriverConfig>({\r\n      driver: ApolloDriver,\r\n      playground: false,\r\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\r\n      autoSchemaFile: join(process.cwd(), 'src/schema.gql'),\r\n    }),\r\n    QueryModule,\r\n    QueryModule,\r\n    NodesModule,\r\n  ],\r\n  providers: [Neo4j],\r\n})\r\nexport class AppModule {}\r\n","import { Module } from '@nestjs/common';\r\nimport { NodesService } from './nodes.service';\r\nimport { NodesResolver } from './nodes.resolver';\r\nimport { QueryService } from '../../query/query.service';\r\nimport { Neo4j } from '../../neo4j/neo4j.service';\r\n\r\n@Module({\r\n  providers: [NodesService, NodesResolver, Neo4j, QueryService],\r\n})\r\nexport class NodesModule {}\r\n","import { Args, Mutation, Resolver, Query } from '@nestjs/graphql';\r\nimport { NodesService } from './nodes.service';\r\nimport { Edge, Node, UserNode } from './types';\r\n@Resolver()\r\nexport class NodesResolver {\r\n  constructor(private service: NodesService) {}\r\n\r\n  @Query(() => Node)\r\n  async findNodesOnLevel(@Args('level') level: string) {\r\n    return this.service.findNodesOnLevel(level);\r\n  }\r\n\r\n  @Mutation(() => Node)\r\n  async createNode(@Args('node') node: UserNode): Promise<Node> {\r\n    try {\r\n      const response = await this.service.createNode(node);\r\n      console.log({ response });\r\n      return response;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  @Mutation(() => [String, String])\r\n  async createEdge(@Args('edge') edge: Edge): Promise<[string, string]> {\r\n    return this.service.createEdge(edge);\r\n  }\r\n\r\n  @Mutation(() => String, {\r\n    nullable: true,\r\n  })\r\n  async deleteNode(@Args('nodeID') nodeID: string): Promise<string | Error> {\r\n    return this.service.deleteNode(nodeID);\r\n  }\r\n\r\n  @Mutation(() => Edge, {\r\n    nullable: true,\r\n  })\r\n  async deleteEdge(@Args('edge') edge: Edge): Promise<Edge | Error> {\r\n    return this.service.deleteEdge(edge);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { QueryService } from '../../query/query.service';\r\nimport { Edge, Node } from './types';\r\n\r\n@Injectable()\r\nexport class NodesService {\r\n  constructor(private query: QueryService) {}\r\n\r\n  async findNodesOnLevel(level: string) {\r\n    const { nodes } = await this.query.result<'nodes', Node>(\r\n      ` MATCH (nodes: Card)\r\n        WHERE nodes.level = \"${level}\"\r\n        RETURN nodes`,\r\n      'nodes'\r\n    );\r\n    return nodes.properties;\r\n  }\r\n  async createNode(node: Node) {\r\n    const { nodes } = await this.query.result<'nodes', Node>(\r\n      ` \r\n        CREATE (nodes: Card {\r\n                date: apoc.date.toISO8601(datetime().epochMillis, \"ms\"),\r\n                description: \"${node.description}\", \r\n                id: \"${node.id}\", \r\n                level: \"${node.level}\", \r\n                progress: 0, \r\n                title: \"${node.title}\"\r\n            }) \r\n        RETURN nodes`,\r\n      'nodes'\r\n    );\r\n    console.log(nodes);\r\n    return nodes.properties;\r\n  }\r\n\r\n  async createEdge(edge: Edge) {\r\n    const { from, to } = edge;\r\n    this.query.raw(\r\n      `MATCH (from: Card), (to: Card) WHERE from.id = \"${from}\" AND to.id = \"${to}\" CREATE (from) -[connection:DIRECT_CONNECTION]-> (to)`\r\n    );\r\n    return [from, to] as [string, string];\r\n  }\r\n\r\n  async deleteNode(nodeID: string) {\r\n    try {\r\n      await this.query.raw(\r\n        `MATCH(node:Card {id: \"${nodeID}\"}) DETACH DELETE (node)`\r\n      );\r\n      return nodeID;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return new Error(`${nodeID} does not appear to exist in the database`);\r\n    }\r\n  }\r\n\r\n  async deleteEdge(edge: Edge) {\r\n    try {\r\n      await this.query.raw(`\r\n      MATCH (:Card {id: \"${edge.from}\"}) -[connection]-> (:Card {id: \"${edge.to}\"})\r\n      DELETE connection\r\n      `);\r\n      return edge;\r\n    } catch (err) {\r\n      console.error(err);\r\n      return new Error(\r\n        `We could not delete the edge between ${edge.from} ${edge.to}`\r\n      );\r\n    }\r\n  }\r\n}\r\n","export * from './node';\r\nexport * from './nodes.input';\r\n","import {\r\n  Field,\r\n  Float,\r\n  GraphQLISODateTime,\r\n  InputType,\r\n  Int,\r\n  ObjectType,\r\n} from '@nestjs/graphql';\r\n\r\n@ObjectType()\r\nexport class Node {\r\n  @Field()\r\n  id: string;\r\n  @Field()\r\n  title: string;\r\n  @Field()\r\n  description: string;\r\n  @Field()\r\n  level: string;\r\n  @Field(() => Float, {\r\n    defaultValue: 0,\r\n    nullable: true,\r\n  })\r\n  progress?: number;\r\n  @Field(() => GraphQLISODateTime, {\r\n    nullable: true,\r\n  })\r\n  uploadDate?: Date;\r\n}\r\n\r\n@InputType()\r\nexport class UserNode {\r\n  @Field()\r\n  id: string;\r\n  @Field()\r\n  title: string;\r\n  @Field()\r\n  description: string;\r\n  @Field()\r\n  level: string;\r\n  @Field(() => Float, {\r\n    defaultValue: 0,\r\n    nullable: true,\r\n  })\r\n  progress?: number;\r\n  @Field(() => GraphQLISODateTime, {\r\n    nullable: true,\r\n  })\r\n  uploadDate?: Date;\r\n}\r\n\r\nexport class NodeResponse {\r\n  @Field(() => Int)\r\n  identity: number;\r\n  @Field(() => [String])\r\n  labels: string[];\r\n  @Field(() => Node)\r\n  proprieties: Node;\r\n}\r\n","import { Field, InputType, ObjectType } from '@nestjs/graphql';\r\n\r\n@InputType('Edge')\r\n@ObjectType('ResponseEdge')\r\nexport class Edge {\r\n  @Field(() => String, {\r\n    nullable: true,\r\n  })\r\n  from: string;\r\n\r\n  @Field(() => String, {\r\n    nullable: true,\r\n  })\r\n  to: string;\r\n}\r\n","import { DynamicModule, Module } from '@nestjs/common';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { Connection } from 'cypher-query-builder';\r\nimport { Driver } from 'neo4j-driver-core';\r\nimport { Neo4j } from './neo4j.service';\r\n\r\ninterface Neo4jConfig {\r\n  scheme: string;\r\n  host: string;\r\n  port: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\n@Module({\r\n  providers: [Neo4j],\r\n})\r\nexport class Neo4jModule {\r\n  static forRoot(): DynamicModule {\r\n    return {\r\n      module: Neo4jModule,\r\n      imports: [ConfigModule],\r\n      global: true,\r\n      exports: ['NEO4J_CONNECTION'],\r\n      providers: [\r\n        {\r\n          provide: 'NEO4J_CONFIG',\r\n          inject: [ConfigService],\r\n          useFactory: (configService: ConfigService): Neo4jConfig => ({\r\n            host: configService.get('DATABASE_HOST'),\r\n            password: configService.get('DATABASE_PASSWORD'),\r\n            port: configService.get('DATABASE_PORT'),\r\n            scheme: configService.get('DATABASE_SCHEME'),\r\n            username: configService.get('DATABASE_USERNAME'),\r\n          }),\r\n        },\r\n\r\n        {\r\n          provide: 'NEO4J_CONNECTION',\r\n          inject: ['NEO4J_CONFIG'],\r\n          useFactory: async (neo4jConfig: Neo4jConfig): Promise<Connection> => {\r\n            const { password, username } = neo4jConfig;\r\n            const connection = new Connection(\r\n              `neo4j+s://6168ca73.databases.neo4j.io`,\r\n              {\r\n                password,\r\n                username,\r\n              }\r\n            ) as Connection & {\r\n              driver: Driver;\r\n            };\r\n            try {\r\n              await connection.driver.verifyConnectivity();\r\n              return connection;\r\n            } catch (e) {\r\n              throw new Error('NO CONNECTION AVAILABLE');\r\n            }\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@nestjs/common';\r\nimport { Connection } from 'cypher-query-builder';\r\n\r\n@Injectable()\r\nexport class Neo4j {\r\n  constructor(\r\n    @Inject('NEO4J_CONNECTION') private readonly connection: Connection\r\n  ) {}\r\n\r\n  query() {\r\n    return this.connection.query();\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { Neo4j } from '../neo4j/neo4j.service';\r\nimport { QueryService } from './query.service';\r\n\r\n@Module({\r\n  providers: [QueryService, Neo4j],\r\n  exports: [QueryService],\r\n})\r\nexport class QueryModule {}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { Neo4j } from '../neo4j/neo4j.service';\r\nimport { Response } from '../types';\r\n@Injectable()\r\nexport class QueryService {\r\n  constructor(private neo4j: Neo4j) {}\r\n\r\n  async result<Key extends string, Value>(\r\n    clause: `${string} RETURN ${Key}`,\r\n    result: Key\r\n  ): Promise<Record<Key, Response<Value>>> {\r\n    const data = await this.neo4j.query().raw(clause).run()[0][result];\r\n    return data;\r\n  }\r\n\r\n  async raw(clause: string) {\r\n    this.neo4j.query().raw(clause).run();\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/apollo\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"apollo-server-core\");","module.exports = require(\"cypher-query-builder\");","module.exports = require(\"tslib\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './assets/app.module';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  await app.listen(5000);\r\n}\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}